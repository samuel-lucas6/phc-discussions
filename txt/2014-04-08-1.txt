phc-discussions - Python wrappers


Message-id: <9F8CA48E-7B03-4688-A1C3-13B638B54562@mac.com>
Date: Mon, 07 Apr 2014 16:59:38 -0700
From: Larry Bugbee <bugbee@....com>
To: "discussions@...sword-hashing.net" <discussions@...sword-hashing.net>
Subject: Python wrappers

Hi all,

I started building Python ctypes wrappers for the submissions.  So far I have a wrapper, a demo pgm, and a KATs test pgm for both Yarn and SkinnyCat.  See https://github.com/buggywhip/PHC_py.

These two suggest I rethink how I will do the others.  First, I will build Python wrappers for the remainder with the standard PHS() function, and another API specific to the name and arg list of that candidate.  Second, I will not attempt a KAT test pgm for each submission because the KAT file for each submission has a different format, with usually different arguments, and frequently, differing names for what appears to be the same argument.  Instead, and third, I will expand the demo pgm to do a simple "hello world" use case followed by three or four KATs, reformatted by hand as appropriate.  

And just so you know, I'm using the Python ctypes FFI to build the wrappers.  They require the functions be called fm a shared library which I will have to build as part of the wrapper building process.  No problem, but I will not be able to share the binaries.  I will however provide the gcc commandline I used.  

When the demo pgm makes calls to PHS() I may have to force some parameters/arguments to a default value.  I will look in the doc but if not easily found, default values may wind up being set to zero.  Be sure then to check your wrapper (when finished) for proper default values and inform if not right.  Also, if there are other APIs in your library you would like access to, and you can, feel free to extend the wrapper.  Share those changes (and a demo test pgm) and I will merge them in.

Since other work seems to be progressing alphabetically, I will work fm the bottom up.  I expect this will take a week or two.

For now I will host these Python wrappers and demo pgms at https://github.com/buggywhip/PHC_py.  If a different location makes sense, that's fine, we'll move.  And longer-term I suspect it would be better if someone other than myself hosted Python wrappers for the zoo.  I have other commitments and am not sure I can be sufficiently responsive longer-term.  

Larry


