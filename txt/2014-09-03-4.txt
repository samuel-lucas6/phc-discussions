phc-discussions - Re: [PHC] A review per day - Schvrch

Message-ID: <1366853113.13978050.1409707634927.JavaMail.root@larc.usp.br>
Date: Tue, 2 Sep 2014 22:27:14 -0300 (BRT)
From: Marcos Antonio Simplicio Junior <mjunior@...c.usp.br>
To: discussions@...sword-hashing.net
Subject: Re: [PHC] A review per day - Schvrch

"Krisztián Pintér" <pinterkr@...il.com(at Tuesday, September 2,
2014, 17:32:04

Thomas Pornin (at Tuesday, September 2, 2014, 10:16:30 PM):

the SHA-3 competition, Keccak's hardware performance was a big
selling
point, making up for somewhat poor software performance. For PHC,
we
really want it to work the other way round.

i'm not sure about that. another example to consider would be
dedicated login servers. i can imagine for server with a large number
of logins, the password authentication becomes bottleneck. it can be
aided by a dedicated hashing hardware. so in fact, high performance
ASIC can be a friend too.

my point is: we need controlled hardness. we need to put much "good"
hardness, but avoid dropping in arbitrary random hardnesses just
because we can. a good password hash is efficient and lightweight,
while has a carefully chosen tunable cost.

ah, one more point. i'm also not sure that the attacker uses ASICs.
how about botnets? i'm pretty sure that besides some governments, the
biggest computing power on earth is a botnet accessing CPUs and GPUs.

Well, if I understood your point, then I have to take back my statement in another thread that "flexibility" (in the sense of "choose the hash that better suits your scenario") can be seen as a disadvantage and say that it is probably a good property for a PHS. I can agree with that and actually that is quite usual in many cryptographic schemes (MACs, AEADs, etc.) 

On the other hand, that also means that *there is no silver bullet*, be it Keccak or an "arcane-Blake2-based-sponge" design :) 



