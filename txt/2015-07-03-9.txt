phc-discussions - Re: [PHC] Password hashing as a self-overwriting Turing machine: new
 version (July 3)

Message-ID: <CAOLP8p6wKcoi8cEm=ptLUDEK_PG1VoV8V3H7ksSagGyW5GR1bQ@mail.gmail.com>
Date: Fri, 3 Jul 2015 07:49:36 -0700
From: Bill Cox <waywardgeek@...il.com>
To: "discussions@...sword-hashing.net" <discussions@...sword-hashing.net>
Subject: Re: [PHC] Password hashing as a self-overwriting Turing machine: new
 version (July 3)

On Fri, Jul 3, 2015 at 5:55 AM, Bill Cox <waywardgeek@...il.comwrote:

On Fri, Jul 3, 2015 at 5:49 AM, Bill Cox <waywardgeek@...il.comwrote:
>
>If you do make the memory size a parameter, then you also need to address
>cache-miss penalties.  The way to make an algorithm efficient at
>large-memory hashing is to hash blocks of memory together, rather than
>individual 64-bit values.  Of course, this adds additional complexity.
>Maybe BusyBeaver should remain a simple low-memory server-side hash.
>>
>
Bill
>

For that matter, since parallelism doesn't make much difference
server-side, maybe just drop the multi-threading wrapper.

Bill



