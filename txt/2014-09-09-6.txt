phc-discussions - Re: [PHC] BSTY - yescrypt-based cryptocoin

Message-ID: <540F1846.8070509@ciphershed.org>
Date: Tue, 09 Sep 2014 11:09:58 -0400
From: Bill Cox <waywardgeek@...hershed.org>
To: discussions@...sword-hashing.net
Subject: Re: [PHC] BSTY - yescrypt-based cryptocoin

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 09/09/2014 07:50 AM, Solar Designer wrote:
Hi,

A yescrypt-based cryptocoin was launched ~12 hours ago:

https://bitcointalk.org/index.php?topic=775289.0 
https://github.com/GlobalBoost/GlobalBoost-Y 
https://bst.globalboo.st/y/product.php?id=22

Very cool!  I have been noodling about the architecture of a Makwa
backed P2P network, where Makwa ASIC boxes provide both authentication
work factors as well as providing proof of work for maintaining the
security of a global block chain based ledger.  I would want the
global ledger to support recording arbitrary data, such as anonymous
credentials, in addition to some financial transactions.

Delegation between various companies of authentication work factors is
only feasible if we can do small enough nano transactions to pay for
what the work is worth.  It is worth very little!  How could an ASIC
based Makwa authentication server get paid?

BitCoins are the obvious choice, but BitCoins are too much of a pain.
 Their value fluctuates wildly, and it is too difficult to convert
BitCoins back and forth to local currencies.  Even buying a BitCoin
remains too difficult for most people.

Why not try to fix the e-money network, using Makwa ASIC based
servers?  That's a dumb idea I had the other day, and I am still
pretty excited about it.

Makwa delegation helps solve the problem of having network servers
with vastly different compute power.  My Raspberry Pi would hang for
several minutes if someone tried to have it do a Makwa authentication
with 100,000 squarings.  A Makwa server could do this in 1/10th of a
second, almost for free.  Throw in a few milliseconds of memory-hard
hashing with some ROM on the SDCard, and a Makwa strengthened master
key that never hits disk, and my Raspberry Pi password database would
probably be harder to crack than Google's.  Compare that to typical
authentication today, where a server spends at most a few milliseconds
doing hashing that an ASIC can do a million times faster.

My preference would be for nano-transactions to be in local
currencies.  The original Ripple algorithm does this quite well, but
the new Ripple Coin based stuff is just another BitCoin for
speculators.  They introduced their own e-coin and gave themselves
most of them for free.  It's a money scam that should be illegal.

My low-end Raspberry Pi's could easily act as a server in a
Ripple-like network.  It could sell services like low-end web hosting,
help downloading faster in a torrent, helping to securely store
encrypted data, and hosting some types of games.  I would probably
have one fairly secure Raspberry Pi do nothing but authentication and
transactions, while my other one would do work to earn nano-payments.

Several of the e-coin systems that have succeeded, including BitCoin
and LiteCoin, bribed users with something extra to get them to engage.
 With BitCoin, I wanted a free high-end gaming machine for my son, and
BitCoin mining bought it for him.  Now that ASICs have ruined that
party, LiteCoin has picked up the torch, once again providing a way
for geeks to pay for high-end graphics cards.

With this system, enthusiasts could justify buying a few extra
Raspberry Pi's, or maybe even a high-end desktop.  The idea is the
network could help them sell services, such as virtual machine
hosting, web site hosting, data storage, network bandwidth, etc.  Real
world e-money supporting nano-transactions is required to make this
work.  BitCoin is great for making a few people rich, but it fails for
nano-transactions.  I think Makwa could play in important in fixing this.

Thoughts?

Bill
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQIcBAEBAgAGBQJUDxhCAAoJEAcQZQdOpZUZ+t8QAJR4h3BVigegyRMtAmH9yWu0
32tYrHNXNpFSbjz/4bazA6lkTmCaENoZu97X4rAw1lpmvNJ+pZo5s/dgDmZXCdiv
VZfnNnK3sSgClYoOurTqzSsHZmQlWmtckVE7JaYvu5db87E+OKc8LXIdKjD4mDm3
WPsSrCfIo41IRFUfqdc3jxw7U8ygJDP+98HvAF5ZW/4BLYdCWgApEq07ZAL8nkrT
CF92gOTE4U9N8VM9o34xFwYvbCtL5OpT+CWmWqZNhUg9WanOArns0fmTbMw5OBZx
QHYWzRFAfNXRu+L5fXi63odYjPCjGDAR1CC3RTRqfQ36XVPPXjTUDgIo7FJ9ZVkh
wv5a07AFhMwL0ql5qhhbLiYBvFmQYLVt60RPAU6bdUc5eEohWQnu0oFCXBoyVCcB
9K0CWlQ3BaI7TmgZm6zqKYySk3VYSyml/NbzlI85BKDXOjB61dKDQyF1Qd1M+qAF
+s+pziNvuSGuX1OroTPyvIgIZCm1aWqxzaJKt3CXMx0XCGP3ohyoNYNH156b9Ega
j0Gh7iT7YppM0QPr64zGhg3WiXAXxtCrVP+npGiFZX4ApyKu6ysxqTKnk8cEbcCb
qCF2yetLdRL2eh0owz1j5kWzPh4fN88FZTCsIlYShtHa4qchXyx9Nv+pug/MEDlI
vkbQJzt6vUqMxSZo2GRJ
=MFaV
-----END PGP SIGNATURE-----

