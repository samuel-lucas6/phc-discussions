phc-discussions - Re: [PHC] Gambit code

Message-ID: <CAOLP8p4xP+8K+2_QbFYVy0W9H9EK2Xs4QEWQVZRvz9VsC1tKwQ@mail.gmail.com>
Date: Mon, 14 Apr 2014 12:36:49 -0400
From: Bill Cox <waywardgeek@...il.com>
To: discussions@...sword-hashing.net
Subject: Re: [PHC] Gambit code

On Mon, Apr 14, 2014 at 11:26 AM, Steve Thomas <steve@...tu.comwrote:

I noticed you reference https://cryptocoding.net/index.php/Coding_rules in
your paper and tried to followed "use separate types for different types of
information". The reason you are suppose to do that is so you get a
compiler error. You are just typedef-ing them as uint8_t of some length.
That means they are all the same type with a fancy name on them. This is
why file gambit.cpp, line 19 compiles:
(uint8_t*)salt
instead of:
(salt*)salt
>
Just noticed a bug file gambit.cpp, line 115:
memset(mem, 0, sizeof(uint8_t)*cost_m);
should be:
memset(mem, 0, sizeof(uint64_t)*cost_m);
>
>
Huh I was going to say you missed the part on cryptocoding.net about
bounds
checking, but there is no part about that.
>

The optimizer will probably remove this call to memset anyway :-)

I thought about reporting this as a bug in the various entries that try to
clear a password or memory using memset, but it still conveys the intent of
the author.  When we get down to just a few entries left standing, I think
the authors should tweak their entries to do a better job clearing memory.

Bill



