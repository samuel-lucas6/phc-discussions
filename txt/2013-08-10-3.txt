phc-discussions - Re: [PHC] C99 in reference implementations

Message-ID: <52069E10.4080902@dei.uc.pt>
Date: Sat, 10 Aug 2013 21:09:52 +0100
From: Samuel Neves <sneves@....uc.pt>
To: discussions@...sword-hashing.net
CC: Daniel Franke <dfoxfranke@...il.com>
Subject: Re: [PHC] C99 in reference implementations

On 10-08-2013 18:45, Daniel Franke wrote:
I have a reference implementation of a prospective PHC entry written in
"portable" C99. By "portable", I mean that it uses only standard C99
language features, has no external library dependencies, and should
produce identical output regardless of host CPU architecture. However,
it makes extensive use of C99 language features, including
<stdint.h>/<stdbool.h>, mixed declarations and code, and variable-length
arrays. Taking advantage of these features significantly improves
readability, but will prevent the code from compiling on MSVC and any
other compilers with poor C99 support. Does/should this pass muster for
PHC submission requirements?
>

During the competition I don't think this is a problem, particularly for
a reference implementation that is meant to be readable. The call for
submissions asks for a Makefile with appropriate build instructions, so
making sure you pass -std=c99 should be enough.

That said, if your submission wins, there will be a number of people
adapting that code to run in whatever platform and compiler version they
favor or are forced to use. By then, there probably should be a more
"portable" implementation. I think the only contentious feature is VLAs,
since the other two can be worked around more or less easily.


