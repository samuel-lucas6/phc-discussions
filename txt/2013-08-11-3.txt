phc-discussions - RE: [PHC] C99 in reference implementations

Message-ID: <002901ce964a$a05a93c0$e10fbb40$@acm.org>
Date: Sat, 10 Aug 2013 21:24:08 -0700
From: "Dennis E. Hamilton" <dennis.hamilton@....org>
To: <discussions@...sword-hashing.net>
Subject: RE: [PHC] C99 in reference implementations

Good catch.
 
I agree that one should also consider stdlib.h for limited purposes.
 
-   Dennis
 
From: Daniel Franke [mailto:dfoxfranke@...il.com] 
Sent: Saturday, August 10, 2013 16:59
To: discussions@...sword-hashing.net
Subject: RE: [PHC] C99 in reference implementations
 

On Aug 10, 2013 7:18 PM, "Dennis E. Hamilton" <dennis.hamilton@....org <mailto:dennis.hamilton@....orgwrote:
My recommendation would be to use Clean C (C Language that is C++ compatible) and also limit the solution to the free-standing subset of C.  That means the most standard headers to use are any of float.h, iso646.h, limits.h, stdarg.h, stdbool.h, stddef.h, and stdint.h, so long Clean C is also achieved.  (I suspect that rules out stdbool.h.)
Adherence to this discipline rules out all means of dynamic memory allocation other than by user-supplied callbacks. Since the PHS() prototype doesn't have any such callbacks in it, this would preclude implementation of any hash algorithm with configurable memory-hardness.



