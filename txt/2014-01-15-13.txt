phc-discussions - Re: [PHC] A must read...

Message-ID: <CA+aY-u7mu2EDvs70v6MTFTNDemPw5Sp556jUsmwSznifr5uuiA@mail.gmail.com>
Date: Wed, 15 Jan 2014 17:38:57 +0000
From: Peter Maxwell <peter@...icient.co.uk>
To: discussions@...sword-hashing.net
Cc: Solar Designer <solar@...nwall.com>
Subject: Re: [PHC] A must read...

On 15 January 2014 17:26, Krisztián Pintér <pinterkr@...il.comwrote:

>
Solar Designer (at Wednesday, January 15, 2014, 3:54:15 PM):
>
Besides integer multiply, I was considering floating-point
>
since it came up, i use this opportunity to ask the list:
>
how reliable floating point is from interop standpoint? i mean:
>
1, the in-memory storage of single and double types. can we expect
different architectures having same bit pattern for the same value?
>
2, exact results. should we expect different architectures supporting
the same type (like IEEE 754) to produce different results due to
different rounding or otherwise?
>
so at the end, my question for example is: if we take two 32 bit
words, treat them as singles, convert them to doubles, multiply them,
and then store the resulting double in a 64 bit word, can we expect
different architectures end up with different bit patterns?
>


​Well, using floats in cryptography is not exactly a new idea but I suspect
it does have some portability problems, e.g. there's implementation of
Bernstein's poly1305​ using floating point - http://cr.yp.to/mac/53.html -
although I haven't actually sat down to look at it... it's sitting fairly
far down on my to-do list.



