phc-discussions - Re: [PHC] Question about saturating the memory bandwidth

Message-ID: <CAOLP8p6h_z6w58RTgGk+LJWUaUc7Z+6-3AYA7J4uMK3ekk6oPQ@mail.gmail.com>
Date: Fri, 17 Jan 2014 22:54:40 -0500
From: Bill Cox <waywardgeek@...il.com>
To: discussions@...sword-hashing.net
Subject: Re: [PHC] Question about saturating the memory bandwidth

On Fri, Jan 17, 2014 at 11:01 AM, Jeremi Gosney <epixoip@...dshell.nlwrote:
On 1/17/2014 6:35 AM, Bill Cox wrote:
>attacker only gains a 2X advantage. That's very good, really
>outstanding, IMO.
[...]
>Assuming the defender has a high-end graphics card, he can get better
>protection using it.
>
It is highly improbable that a defender will ever have a high-end GPU,
and especially not one that is equal to the type of GPU most attackers
will use. And if we have done our jobs right, the algorithm will be
highly resistant to acceleration. It should be considerably slower on
GPU than CPU, if not impossible to implement on GPU. The goal is to give
defenders the advantage, or at the very least to level the playing field.

I agree that the most important goal in the near term at least is to
have the best protection possible on traditional CPUs, as well as
mobile CPUs and even embedded processors.

However, there is no reason I see that a KDF cannot have a parallelism
parameter.  Scrypt has a "p" parameter which in theory is just that.
If we have a quad-core CPU, it may make sense to use all 4, especially
if they can fill up more memory bandwidth.  Taking that to an extreme,
there is no reason we can't allow p == 4096, and match the KDF to a
monster graphics card.  This would only be for applications where a
user expects to always perform password KDF on the same system, such
as is typical with a TrueCrypt volume.  I don't think that a KDF that
is adaptable to such extremes is necessarily weaker on traditional
CPUs.

Bill

