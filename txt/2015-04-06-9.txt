phc-discussions - Re: [PHC] Updated tests document

Message-ID: <20150406215403.GA17291@openwall.com>
Date: Tue, 7 Apr 2015 00:54:03 +0300
From: Solar Designer <solar@...nwall.com>
To: discussions@...sword-hashing.net
Subject: Re: [PHC] Updated tests document

Milan,

On Mon, Apr 06, 2015 at 11:10:27PM +0200, Milan Broz wrote:
I updated PHC candidates test output for the previously discussed tests

  https://github.com/mbroz/PHCtest/blob/master/output/phc_round2.pdf

- added "normalized" test from tables in http://article.gmane.org/gmane.comp.security.phc/2550
- fixed Lyra2 to us just one thread
- added memory/time combined chart
- added Argon2 git versions (just for comparison)
- added more functions to KDF example

Otherwise it is kept in the same format.

This is good stuff.  Thank you!

When you provide speeds for "Reference" implementations, in yescrypt's
case is this -ref or -opt?  I ask since yescrypt is unusual in providing
3 implementations currently: -ref (not for use at all, beyond testing),
-opt (for non-SIMD builds), and -simd (for SIMD builds).

If -ref starts being benchmarked, this gets me thinking that maybe I
should drop it in favor of -opt. ;-)  But that's counterproductive in
terms of providing an implementation that is easier to read and is more
self-contained (-ref does not use the yescrypt-platform.c functions,
whereas -opt and -simd do).

I think it makes more sense to list speeds for non-SIMD vs. SIMD builds,
because non-SIMD builds may actually be in use (e.g., if someone builds
a program that is meant to be portable to older CPUs).

yescrypt-ref.c even has:

$ fgrep warning yescrypt-ref.c
#warning "This reference implementation is deliberately mostly not optimized. Use yescrypt-best.c instead unless you're testing (against) the reference implementation on purpose."

which gets printed during build.  I think it's not the same kind of
thing as other candidates' non-SIMD implementations.  -opt is more
similar to those.

Alexander

