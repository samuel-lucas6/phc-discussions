phc-discussions - Re: [PHC] Best RNG for filling memory?

Message-id: <D5B20A19-4467-4435-AEAF-610AE28885FB@mac.com>
Date: Tue, 24 Dec 2013 20:52:40 -0800
From: Larry Bugbee <bugbee@....com>
To: discussions@...sword-hashing.net
Subject: Re: [PHC] Best RNG for filling memory?

On Dec 24, 2013, at 7:51 PM, Bill Cox <waywardgeek@...il.comwrote:

Sorry for this poorly informed post... I was unable to find a good source package for benchmarking salsa20.  Do you know where I can get one that simply spits out random numbers for a stream cipher that I can easily benchmark?

MARC speeds up ARC4 by almost 2X, making it speed competitive with Blake2.  Blake2 is based on ChaCha, which in turn is based on Salsa20.  From what I've read so far, ChaCha claimed to be faster than Slasa20, and Blake claimed to be based on ChaCha.  Why would Salsa20 be faster than Blake2?

Hi Bill,

The side-by-side difference between Salsa20 and ChaCha is perhaps only 3-5%.  ...and times can vary depending on the implementer's coding style and any optimizations he/she may have implemented.  Also be sure to check the implementation's number of rounds.  For example, Salsa20 is commonly implemented in 8, 12, and 20 rounds and times will vary accordingly.

FWIW, pure Python is not all that quick, so I doubt this is what you are looking for.  Nevertheless, here are pure Python implementations of the four you mentioned.  http://bugbee.us/crypto  Note too that I implemented each, some years apart, and used different techniques.  I expect a side-by-side bench will show times other than what you would expect.  (Perhaps in the next month or two I'll tweak each so that they each have a consistent base.)

Larry


