phc-discussions - RE: [PHC] Why protect against side channel attacks

Message-ID: <BY2PR03MB554FF4AD1BA9EA6139B30A4A7AE0@BY2PR03MB554.namprd03.prod.outlook.com>
Date: Thu, 25 Jun 2015 00:55:49 +0000
From: Marsh Ray <maray@...rosoft.com>
To: "discussions@...sword-hashing.net" <discussions@...sword-hashing.net>
Subject: RE: [PHC] Why protect against side channel attacks

To recover from a cache-timing attack where the attacker has the salt and usernames, you can simply require users to reset passwords, just like we do normally.

I think you massively underestimate the amount of disruption this cause large service providers. I would think that many sites would see a double-digit percentage of their users just drop out and never come back.

I am confused why a company would more easily learn of a password database leak than a cache timing attack combined with leaking the salt database.

SQL logs?

They're passwords are only compromised if an attacker already breached the salt database

Again, these cache timing side channels tend to leak the salts too.

If an attacker learns that somewhere in the world, an unknown user logged in at exactly 10:38AM, then the system is "broken".

Often the attacker has a position on the network near a targeted user and is able to observe (if not control) precisely the time that the correct password is received by the server.

This paper https://www.usenix.org/system/files/conference/foci12/foci12-final8.pdf outlines these scenarios a bit in the context of timing and deanonymization attacks.


-          Marsh


From: Bill Cox [mailto:waywardgeek@...il.com]
Sent: Wednesday, June 24, 2015 5:33 PM
To: discussions@...sword-hashing.net
Subject: Re: [PHC] Why protect against side channel attacks

On Wed, Jun 24, 2015 at 5:18 PM, Greg Zaverucha <gregz@...rosoft.com<mailto:gregz@...rosoft.com>wrote:
Yes I (and others, like you Kriszti√°n) have understood the technical mechanics of how the attack would work for a while.  But I hadn't thought through the whole scenario that I described in my email, and the part that was new to me was that there isn't a good way to recover from this type of attack...

To recover from a cache-timing attack where the attacker has the salt and usernames, you can simply require users to reset passwords, just like we do normally.  This gives you a new password/salt database, which should be better protected in the future.

I am confused why a company would more easily learn of a password database leak than a cache timing attack combined with leaking the salt database.  The usual signal a company notices first is a ton of complaints from users with PWNed accounts.

Bill



