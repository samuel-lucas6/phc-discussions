phc-discussions - Re: [PHC] Specification of a modular crypt format

Message-ID: <CAGiyFdc_0zD+8hsaNJpTo7VamwvxYumh5y9ZcRWV9HutXnb3sQ@mail.gmail.com>
Date: Fri, 18 Sep 2015 15:02:03 +0000
From: Jean-Philippe Aumasson <jeanphilippe.aumasson@...il.com>
To: "discussions@...sword-hashing.net" <discussions@...sword-hashing.net>
Subject: Re: [PHC] Specification of a modular crypt format

Changing

"
(...) For numerical parameters, functions SHOULD use plain decimal
encoding (other encodings are possible as long as they are clearly
defined).

The function specification MUST be such that the encoding of each
parameter value is deterministic. For any parameter value, there shall
be a single sequence of characters that is a valid encoding of that
value.
"

to

"
For numerical parameters, functions SHOULD use plain decimal
encoding (other encodings are possible as long as they are clearly
defined). For example the number one should be encoded as ‘1’, not as
‘001’.
Parsers MAY support other encodings, for example ‘001’ may be accepted as
valid encodings.
"


Feel free to optimize the wording.








On Thu, Sep 17, 2015 at 3:18 PM Krisztián Pintér <pinterkr@...il.comwrote:

On Thu, Sep 17, 2015 at 2:15 PM, Thomas Pornin <pornin@...et.orgwrote:
In an object-oriented implementation, the generic parser would be given
not a lost of parameters, but an associative map of parameter names to
instances that parse the specific parameter values.
>
i would assume any language supporting associative maps also supports
a list/array of tuples. am i wrong in that assumption? i must admit,
i'm a little lagged behind on modern languages.it certainly does not
seem to be a problem in c#, python and rust. have no clue about perl.
>



