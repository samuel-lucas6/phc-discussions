phc-discussions - Re: [PHC] wider integer multiply on 32-bit x86

Message-ID: <CAOLP8p6HSFqe2qjUKphX1QQN+uaHk-K+hqmHB+4-jxYND-+wOQ@mail.gmail.com>
Date: Tue, 4 Mar 2014 07:56:19 -0500
From: Bill Cox <waywardgeek@...il.com>
To: discussions@...sword-hashing.net
Subject: Re: [PHC] wider integer multiply on 32-bit x86

On Tue, Mar 4, 2014 at 7:24 AM, Thomas Pornin <pornin@...et.orgwrote:
The usual problem with using FPU is that most ARM CPU don't have any. If
an algorithm must run well on ARM (and given today's trend on using ARM
in server farms, the future PHS should aim at running well on ARM) then
it should avoid operations which are too FPU-tied. The ARM has a
reasonably fast 32x32->64 integer multiply, though.
>
>
        --Thomas Pornin

Even worse, we often don't get to use the ARM FPU when it is there.  I
did a port of a speech speedup algorithm to Android, and found that
even when almost all the users had phones with FPUs, enabling it in
the compiler meant I could not run at all on phones without one.
There seems to be no FPU emulation trick like we had on x86 machines,
but I could be wrong about that.  Most people seem to just uses the
non-FPU enabled compiler, wasting the FPU for most applications.

However, there's an OpenGL accelerator on practically every new
Android device... that would be fun to integrate.  How could we do key
stretching with a 3D rendering engine?

Bill

