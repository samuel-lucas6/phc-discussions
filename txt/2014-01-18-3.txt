phc-discussions - Re: [PHC] Question about saturating the memory bandwidth

Message-ID: <CA+aY-u5MFPkRr-kbj8RZLE12aBfuoNeJQ4XaLBm1j16BG4=znQ@mail.gmail.com>
Date: Sat, 18 Jan 2014 08:40:08 +0000
From: Peter Maxwell <peter@...icient.co.uk>
To: discussions@...sword-hashing.net
Subject: Re: [PHC] Question about saturating the memory bandwidth

On 18 January 2014 03:54, Bill Cox <waywardgeek@...il.comwrote:

On Fri, Jan 17, 2014 at 11:01 AM, Jeremi Gosney <epixoip@...dshell.nl>
wrote:
On 1/17/2014 6:35 AM, Bill Cox wrote:
>attacker only gains a 2X advantage. That's very good, really
>outstanding, IMO.
[...]
>Assuming the defender has a high-end graphics card, he can get better
>protection using it.
>
It is highly improbable that a defender will ever have a high-end GPU,
and especially not one that is equal to the type of GPU most attackers
will use. And if we have done our jobs right, the algorithm will be
highly resistant to acceleration. It should be considerably slower on
GPU than CPU, if not impossible to implement on GPU. The goal is to give
defenders the advantage, or at the very least to level the playing field.
>
I agree that the most important goal in the near term at least is to
have the best protection possible on traditional CPUs, as well as
mobile CPUs and even embedded processors.
>
However, there is no reason I see that a KDF cannot have a parallelism
parameter.  Scrypt has a "p" parameter which in theory is just that.
If we have a quad-core CPU, it may make sense to use all 4, especially
if they can fill up more memory bandwidth.  Taking that to an extreme,
there is no reason we can't allow p == 4096, and match the KDF to a
monster graphics card.  This would only be for applications where a
user expects to always perform password KDF on the same system, such
as is typical with a TrueCrypt volume.  I don't think that a KDF that
is adaptable to such extremes is necessarily weaker on traditional
CPUs.
>
>

And therein lies the rub.  Saturating the memory bandwidth will not be
practical - or even nearly so - for the majority of use-cases.  Similarly,
the idea of the defender using GPUs will not be reasonable in most
instances either.  Yes, there are specific cases where it might be useful
but one needs to address far more mundane scenarios like busy web-servers
on current hardware.

Most of the big password thefts have occurred on websites, and more
recently arguably also with these fancy games services.  With the former
we'll be lucky to convince folk to use anything more than a salted-hash let
alone something that will hog all their processor cores and memory for each
login attempt (whether that attempt is valid or not).




​​



