phc-discussions - Re: [PHC] Transforming hash to different cost setting

Message-ID: <CAOLP8p7X_eSrM8j8fm3hoh0RCCmqKAM+y3oHpe0VCSZaz0nomQ@mail.gmail.com>
Date: Sat, 22 Mar 2014 17:00:41 -0400
From: Bill Cox <waywardgeek@...il.com>
To: discussions@...sword-hashing.net
Subject: Re: [PHC] Transforming hash to different cost setting

On Sat, Mar 22, 2014 at 8:53 AM, Solar Designer <solar@...nwall.comwrote:
On Sat, Mar 22, 2014 at 08:39:21AM -0400, Bill Cox wrote:
>I use Christian's solution for this.  It loses up to 2X in terms of
>time*memory security, so users would not use this up-front.
>
Actually, up to 3x - that is, Catena's area-time cost to attacker
converges to 1/3 of what's optimal, after many upgrades.  With
(acceptably) higher granularity of upgrades, we can improve this to 3/5
of optimal.  (I posted these numbers in here a few months ago.)
>
>Gary has a similar idea, but he wants to store the new rehashing
>parameters in a chain with each password.  That would allow the admin
>to take that 50MiB hash and turn it into a 2-step hash of 50 MiB and
>400MiB.  It's more efficient, but adds complexity.
>
I've been thinking of this too, even considered how the info would be
encoded - but I think I'll simply go for the 3/5 option.
>
Alexander

I know the answer will make me feel dumb, but if area-time is
approximated as peak memory usage * time, and we fill memory at a
constant speed (as in TwoCats - doing one read and write all the time
while filling memory), then why would it be worse than 2X lower peak
memory * time?  For a given runtime, instead of filling 2GiB, I could
fill 1MiB, 2MiB, 4MiB... 1GiB.  The time is the same and the peak
memory usage is half.

Bill

