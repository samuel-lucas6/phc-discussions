phc-discussions - Re: [PHC] "Why I Don't Recommend Scrypt"

Message-ID: <CA+aY-u6zJSHp-S+y-m1kHdCckP5qozN+mCvuL0BsozUcJZmQ5g@mail.gmail.com>
Date: Thu, 13 Mar 2014 17:39:01 +0000
From: Peter Maxwell <peter@...icient.co.uk>
To: "discussions@...sword-hashing.net" <discussions@...sword-hashing.net>
Subject: Re: [PHC] "Why I Don't Recommend Scrypt"

On 13 March 2014 16:49, Tony Arcieri <bascule@...il.comwrote:

On Thu, Mar 13, 2014 at 9:43 AM, CodesInChaos <codesinchaos@...il.com>wrote:
>
>Servers can't afford hashing for a second and using a GB of RAM in the
>process
>
>
This presupposes either a high rate of password hash verifications or
extremely RAM-limited servers.
>
>
That depends on what you consider a high rate of password verification and
RAM-limited.  Amazon is currently advertising their "m3.large" cloud
instance - which I presume is fairly standard - as having 7.5Gb RAM.  So
lets presume our hypothetical standard sysadmin is running a webserver with
PHP and that they allocate half the RAM to the db instance, webserver,
caches, etc., and the other half to password hashing.  This is already
somewhat artificial as I can't see many people allocating half their
available RAM *just* for password hashing but lets go with it.

That means there's what 3.5Gb available.  At 1Gb requirement for a whole
second upon each verification, the server could be brought to its knees
with only 4 password verification attempts per second.

Personally, I'd never run a password hash scheme that requires that
magnitude of resources on a production server -- it's *far* too costly.
 The money and time would be much better spent ensuring a strong password
policy is enforced.



